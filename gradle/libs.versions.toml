[versions]
kotlin = "2.0.0"
avro = "1.11.3"
confluent = "7.7.0"
confluentCcs = "7.7.0-ccs"
avro4k = "2.0.0"
junit = "5.10.3"
kotest = "5.4.2"
logback = "1.2.11"
testcontainers = "1.19.8"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version = "1.9.20" }
release = { id = "net.researchgate.release", version = "3.0.1" }
versions = { id = "com.github.ben-manes.versions", version = "0.42.0" }

[libraries]
avro = { module = "org.apache.avro:avro", version.ref = "avro" }
kafka-avro-serializer = { module = "io.confluent:kafka-avro-serializer", version.ref = "confluent" }
kafka-avro-serde = { module = "io.confluent:kafka-streams-avro-serde", version.ref = "confluent" }
avro4k = { module = "com.github.avro-kotlin.avro4k:avro4k-core", version.ref = "avro4k" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlibJdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version = "1.7.1" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version = "1.8.1" }
classgraph = { module = "io.github.classgraph:classgraph", version = "4.8.174" }
retry = { module = "com.michael-bull.kotlin-retry:kotlin-retry", version = "1.0.9" }
#Test libs
kafka-streams = { module = "org.apache.kafka:kafka-streams", version.ref = "confluentCcs" }
kafka-clients = { module = "org.apache.kafka:kafka-clients", version.ref = "confluentCcs" }
awaitility = { module = "org.awaitility:awaitility", version = "4.2.1" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers" }
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-runtime = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
mockk = { module = "io.mockk:mockk", version = "1.13.12" }

[bundles]
test = ["junit-api", "junit-params", "kotest-assertions", "kotest-runner", "mockk"]
integrationTest = ["awaitility", "testcontainers", "testcontainers-kafka", "kafka-streams", "kafka-clients"]
logging = ["logback-classic", "logback-core"]